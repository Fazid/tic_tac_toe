require 'spec_helper'

describe Board do
  it "should have 9 cells" do
    board = Board.new
    board.cells.flatten.count.should == 9
  end

  xit "should be full" do
  end  
  
  xit "should not be full" do
  end

  context "initialize board" do
    it "should not raise exceptions with valid array size and valid data" do
      valid_data = [[0, 1, nil]] * 3
      expect { Board.new(valid_data) }.not_to raise_error(ArgumentError)
    end

    it "should not raise exceptions with no data" do
      expect { Board.new }.not_to raise_error(ArgumentError)
    end

    it "should raise exceptions with not valid array size" do
      not_valid_data = [[0, 1, nil]] * 2
      expect { Board.new(not_valid_data) }.to raise_error(ArgumentError)
    end

    it "should raise exceptions with invalid data" do
      invalid_data = [[0, 2, nil]] * 3
      expect { Board.new(invalid_data) }.to raise_error(ArgumentError)
    end
  end

  context ".make_move" do
  end  
  
  context ".reset" do
  end  
  
  context ".cell" do
  end

  context ".empty?" do
    it "should be empty" do
      board = Board.new([[nil, nil, nil]] * 3)
      board.should be_empty
    end

    it "should not be empty" do
      board = Board.new([[nil, 0, 2]] * 3)
      board.should_not be_empty
    end
  end
end
